install.packages("agricolae")
library("agricolae")
x<-seq(0,1, 0.01)
y<-pnorm(x, 0.3, 0.1)
plot(y)
y<-dnorm(x, 0.3, 0.1)
plot(y)
y<-dnorm(x, 0.25, 0.05)
plot(y)
y2 <- dnorm(x, 0.7, 0.2)
plot(y2)
y2 <- dnorm(x, 0.65, 0.2)
plot(y2)
plot(y, type="l", lwd=2, col="red")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/ Perceived Sound /ba/")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/) Perceived Sound (/ba/)")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)")
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(y2, col="blue", lwd=2)
y2 <- dnorm(x, 0.7, 0.15)
lines(y2, col="blue", lwd=2)
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(y2, col="blue", lwd=2)
sd1 = 0.05
s22 = 0.2
w1 = (1/sd1)/(1/sd1 + 1/sd2)
sd2 = 0.2
w1 = (1/sd1)/(1/sd1 + 1/sd2)
w1
w2 = (1/sd2)/(1/sd1 + 1/sd2)
w2
m = w1*0.25 + w2*0.7
m
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability", ylim=c(0,10))
lines(y2, col="blue", lwd=2)
1/(1/sd1 + 1/sd2)
cy <- dnorm(x, 0.34, 0.04)
lines(cy, col="black", lwd=2, lty=3)
legend(legend = c("Vision", "Sound", "Combined", pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
)
legend(x="topleft", legend = c("Vision", "Sound", "Combined", pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
)
legend(x="topleft", legend = c("Vision", "Sound", "Combined"), pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability")
lines(cy, col="black", lwd=2, lty=3)
lines(y2, col="blue", lwd=2)
plot(y, type="l", lwd=2, col="red", xlab="(/fa/)    Perceived Sound     (/ba/)", ylab="Probability", ylim=c(0,10))
lines(cy, col="black", lwd=2, lty=3)
lines(y2, col="blue", lwd=2)
legend(x=80, y=7, legend = c("Vision", "Sound", "Combined"), pch=NA, lwd=2, lty=c(1,1,3), col=c("red", "blue", "black"))
setwd("~/")
setwd("/actr/models/DRI/data")
source('/actr/models/DRI/data/analyze_DRI.r', echo=TRUE)
pdf("InferredLateStim.pdf", width = 5, height = 5)
k1 <- subset(ds, ds$Stimulation == "Late" & ds$Instructed == "Inferred")
ms <- tapply(k1$ResponseTime, list(k1$Site, k1$Rule), mean)
ses <- tapply(k1$ResponseTime, list(k1$Site, k1$Rule), se)
xs <- barplot(ms, beside = T, legend=T,
ylim=c(0,2), main="Inferred Rules, Late Stimulation", border="white", col=c("grey65", "grey45"))
arrows(x0=xs, x1=xs, y0=ms, y1 = ms + ses, angle=90, length=0.1)
arrows(x0=xs, x1=xs, y0=ms, y1 = ms - ses, angle=90, length=0.1)
# Adds some numbers
text(x = xs, y = ms + ses + 0.05, labels = round(ms, 3))
box(bty="o")
dev.off()
k1 <- subset(ds, ds$Stimulation == "Late" & ds$Instructed == "Inferred")
ms <- tapply(k1$ResponseTime, list(k1$Site, k1$Rule), mean)
ses <- tapply(k1$ResponseTime, list(k1$Site, k1$Rule), se)
xs <- barplot(ms, beside = T, legend=T,
ylim=c(0,2), main="Inferred Rules, Late Stimulation", border="white", col=c("grey65", "grey45"))
arrows(x0=xs, x1=xs, y0=ms, y1 = ms + ses, angle=90, length=0.1)
arrows(x0=xs, x1=xs, y0=ms, y1 = ms - ses, angle=90, length=0.1)
# Adds some numbers
text(x = xs, y = ms + ses + 0.05, labels = round(ms, 3))
box(bty="o")
tapply(k1$ResponseTime, list(k1$Site, k1$Rule), mean)
a1 <- aov(ResponseTime ~ (Rule * Site) + Error(Subject/(Rule * Site)), data=k1)
summary(a1 <- aov(ResponseTime ~ (Rule * Site) + Error(Subject/(Rule * Site)), data=k1)
)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
t.test(ResponseTime ~ Site, subset(k1, k1$Rule == "Symbolic"), paired=T)
t1 <- subset(k1, k1$Site=="PMd" & k1$Rule=="Symbolic")
t2 <- subset(k1, k1$Site=="Vertex" & k1$Rule=="Concrete")
t.test(t1$ResponseTime, t2$ResponseTime, paired=T)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
t.test(ResponseTime ~ Site, subset(k1, k1$Rule == "Symbolic"), paired=T)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "PMd"), paired=T)
t.test(ResponseTime ~ Site, subset(k1, k1$Rule == "Symbolic"), paired=T)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "Vertex"), paired=T)
t.test(ResponseTime ~ Rule, subset(k1, k1$Site == "Vertex"), paired=T)
unique(d, d$Stimulation)
unique(d$Stimulation)
d <- aggregate(correct[c("EncodingTime", "ResponseTime")], list(Instructed=correct$Instructed,
Rule=correct$Rule,
Stimulation=correct$Stimulation,
Site=correct$Site,
Subject=correct$Subject),
mean)
summary(aov(EncodingTime ~ (Instructed * Rule * Stimulation * Site)
+ Error(Subject/(Instructed * Rule * Stimulation * Site)),
d))
summary(aov(ResponseTime ~ (Instructed * Rule * Stimulation * Site)
+ Error(Subject/(Instructed * Rule * Stimulation * Site)),
d))
unique(d$Stimulation)
d[d$Stimulation=="NoStimulation"]
d$ResponseTime[d$Stimulation=="NoStimulation"]
ds <- subset(d, d$Stimulation != "NoStimulation")
summary(aov(ResponseTime ~ (Instructed * Stimulation * Rule * Site)
+ Error(Subject/(Instructed * Stimulation * Rule * Site)),
ds))
tapply(acc, list(acc$Rule, acc$Instructed))
tapply(acc, list(acc$Rule, acc$Instructed), mean)
tapply(acc$Accuracy, list(acc$Rule, acc$Instructed), mean)
barplot(tapply(acc$Accuracy, list(acc$Rule, acc$Instructed), mean))
barplot(tapply(acc$Accuracy, list(acc$Rule, acc$Instructed), mean), beside=T)
barplot(tapply(acc$Accuracy, list(acc$Instructed, acc$Rule), mean), beside=T)
tapply(acc$Accuracy, list(acc$Rule, acc$Instructed, acc$Site), mean)
tapply(acc$Accuracy, list(acc$Rule, acc$Instructed, acc$Site, acc$Stimulation), mean)
tapply(acc$Accuracy, list(acc$Rule, acc$Instructed, acc$Site, acc$Stimulation), mean)
k<-tapply(acc$Accuracy, list(acc$Rule, acc$Instructed, acc$Site, acc$Stimulation), mean)
barplot(k, beside=T)
dim(ds)
128/8
dz <- subset(ds, ds$Site != "PMd")
tapply(dz, list(dz$Rule, dz$Instructed), mean)
tapply(dz$ResponseTime, list(dz$Rule, dz$Instructed), mean)
barplot(tapply(dz$ResponseTime, list(dz$Rule, dz$Instructed), mean))
barplot(tapply(dz$ResponseTime, list(dz$Rule, dz$Instructed), mean), beside=T)
barplot(tapply(dz$ResponseTime, list(dz$Instructed, dz$Rule), mean), beside=T)
barplot(tapply(dz$ResponseTime, list(dz$Instructed, dz$Rule), mean), beside=T, ylim=c(0,1.2))
barplot(tapply(dz$ResponseTime, list(dz$Instructed, dz$Rule), mean), beside=T, ylim=c(0,1.2), legend=T, border="white")
barplot(tapply(dz$ResponseTime, list(dz$Instructed, dz$Rule), mean), beside=T, ylim=c(0,1.2),  border="white")
box(bty="o")
